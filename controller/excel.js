const ExcelJS = require('exceljs');
const db = require('../config/db')
let conLocal = db.conLocal;
let conLocalP = db.conLocalP

function numToSSColumn(num) {
    var s = '', t;

    while (num > 0) {
        t = (num - 1) % 26;
        s = String.fromCharCode(65 + t) + s;
        num = (num - t) / 26 | 0;
    }
    return s || undefined;
}


const createExcel = async (res, month, part, line) => {
    const workbook = new ExcelJS.Workbook();
    const worksheet = workbook.addWorksheet('My Sheet');
    const worksheet2 = workbook.addWorksheet('Loc Sheet');
    let k = 0
    console.log(part, month, line)
    const jenisNG = ['DIMENSI', 'BLONG', 'SERET', 'DENT', 'UNCUTTING', 'STEP', 'KASAR', 'NG ASSY', 'RIVET', 'BIMETAL', 'JOINT TUBE', 'PLATE', 'NO JIG', 'OTHERS P', 'KEROPOS', 'BOCOR', 'FLOWLINE', 'RETAK', 'GOMPAL', 'OVER PROSES', 'KURANG PROSES', 'JAMUR', 'UNDERCUT', 'DEKOK', 'TRIAL', 'UNCUT MATERIAL', 'OTHERS MATERIAL']
    for (let i = 10; i <= 650; i += 24) {
        let j = i + 23
        worksheet2.mergeCells(`${numToSSColumn(i)}1:${numToSSColumn(j)}1`)
        worksheet2.getCell(`${numToSSColumn(i)}1`).value = jenisNG[k]
        worksheet2.getCell(`${numToSSColumn(i)}1`).font = { bold: true }
        worksheet2.getCell(`${numToSSColumn(i)}1`).alignment = { vertical: 'middle', horizontal: 'center' };
        worksheet2.getCell(`${numToSSColumn(i)}1`).fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'F08080' },
        };
        worksheet2.getCell(`${numToSSColumn(i)}1`).border = {
            top: { style: 'medium', color: { argb: '0a0a0a' } },
            left: { style: 'medium', color: { argb: '0a0a0a' } },
            bottom: { style: 'medium', color: { argb: '0a0a0a' } },
            right: { style: 'medium', color: { argb: '0a0a0a' } }
        };
        k++
    }

    for (let i = 1; i <= 104; i++) {
        var letter = numToSSColumn(i);
        worksheet.mergeCells(`${letter}1:${letter}2`)
        worksheet.getCell(`${letter}1`).font = { bold: true }
        worksheet.getCell(`${letter}1`).alignment = { vertical: 'middle', horizontal: 'center' };
        worksheet.getCell(`${letter}1`).fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'F08080' },
        };
        worksheet.getCell(`${letter}1`).border = {
            top: { style: 'medium', color: { argb: '0a0a0a' } },
            left: { style: 'medium', color: { argb: '0a0a0a' } },
            bottom: { style: 'medium', color: { argb: '0a0a0a' } },
            right: { style: 'medium', color: { argb: '0a0a0a' } }
        };
    }

    worksheet2.getRow(2).values = ['No LHP', 'Tanggal', 'Shift', 'MP1', 'MP2', 'MP3', 'MP4', 'Line', 'Part',
        //1
        'DMA', 'DMB', 'DMC', 'DMD', 'DME', 'DMF', 'DMG', 'DMH', 'DMI', 'DMJ', 'DMK', 'DML', 'DMM', 'DMN', 'DMO', 'DMP', 'DMQ', 'DMR', 'DMS', 'DMT', 'DMU', 'DMV', 'DMW', 'DMX',
        'BLA', 'BLB', 'BLC', 'BLD', 'BLE', 'BLF', 'BLG', 'BLH', 'BLI', 'BLJ', 'BLK', 'BLL', 'BLM', 'BLN', 'BLO', 'BLP', 'BLQ', 'BLR', 'BLS', 'BLT', 'BLU', 'BLV', 'BLW', 'BLX',
        'SRA', 'SRB', 'SRC', 'SRD', 'SRE', 'SRF', 'SRG', 'SRH', 'SRI', 'SRJ', 'SRK', 'SRL', 'SRM', 'SRN', 'SRO', 'SRP', 'SRQ', 'SRR', 'SRS', 'SRT', 'SRU', 'SRV', 'SRW', 'SRX',
        'DNA', 'DNB', 'DNC', 'DND', 'DNE', 'DNF', 'DNG', 'DNH', 'DNI', 'DNJ', 'DNK', 'DNL', 'DNM', 'DNN', 'DNO', 'DNP', 'DNQ', 'DNR', 'DNS', 'DNT', 'DNU', 'DNV', 'DNW', 'DNX',
        'UCA', 'UCB', 'UCC', 'UCD', 'UCE', 'UCF', 'UCG', 'UCH', 'UCI', 'UCJ', 'UCK', 'UCL', 'UCM', 'UCN', 'UCO', 'UCP', 'UCQ', 'UCR', 'UCS', 'UCT', 'UCU', 'UCV', 'UCW', 'UCX',
        'STA', 'STB', 'STC', 'STD', 'STE', 'STF', 'STG', 'STH', 'STI', 'STJ', 'STK', 'STL', 'STM', 'STN', 'STO', 'STP', 'STQ', 'STR', 'STS', 'STT', 'STU', 'STV', 'STW', 'STX',
        'KSA', 'KSB', 'KSC', 'KSD', 'KSE', 'KSF', 'KSG', 'KSH', 'KSI', 'KSJ', 'KSK', 'KSL', 'KSM', 'KSN', 'KSO', 'KSP', 'KSQ', 'KSR', 'KSS', 'KST', 'KSU', 'KSV', 'KSW', 'KSX',
        'NAA', 'NAB', 'NAC', 'NAD', 'NAE', 'NAF', 'NAG', 'NAH', 'NAI', 'NAJ', 'NAK', 'NAL', 'NAM', 'NAN', 'NAO', 'NAP', 'NAQ', 'NAR', 'NAS', 'NAT', 'NAU', 'NAV', 'NAW', 'NAX',
        'RVA', 'RVB', 'RVC', 'RVD', 'RVE', 'RVF', 'RVG', 'RVH', 'RVI', 'RVJ', 'RVK', 'RVL', 'RVM', 'RVN', 'RVO', 'RVP', 'RVQ', 'RVR', 'RVS', 'RVT', 'RVU', 'RVV', 'RVW', 'RVX',
        //2   
        'BMA', 'BMB', 'BMC', 'BMD', 'BME', 'BMF', 'BMG', 'BMH', 'BMI', 'BMJ', 'BMK', 'BML', 'BMM', 'BMN', 'BMO', 'BMP', 'BMQ', 'BMR', 'BMS', 'BMT', 'BMU', 'BMV', 'BMW', 'BMX',
        'JTA', 'JTB', 'JTC', 'JTD', 'JTE', 'JTF', 'JTG', 'JTH', 'JTI', 'JTJ', 'JTK', 'JTL', 'JTM', 'JTN', 'JTO', 'JTP', 'JTQ', 'JTR', 'JTS', 'JTT', 'JTU', 'JTV', 'JTW', 'JTX',
        'PLA', 'PLB', 'PLC', 'PLD', 'PLE', 'PLF', 'PLG', 'PLH', 'PLI', 'PLJ', 'PLK', 'PLL', 'PLM', 'PLN', 'PLO', 'PLP', 'PLQ', 'PLR', 'PLS', 'PLT', 'PLU', 'PLV', 'PLW', 'PLX',
        'NJA', 'NJB', 'NJC', 'NJD', 'NJE', 'NJF', 'NJG', 'NJH', 'NJI', 'NJJ', 'NJK', 'NJL', 'NJM', 'NJN', 'NJO', 'NJP', 'NJQ', 'NJR', 'NJS', 'NJT', 'NJU', 'NJV', 'NJW', 'NJX',
        'OPA', 'OPB', 'OPC', 'OPD', 'OPE', 'OPF', 'OPG', 'OPH', 'OPI', 'OPJ', 'OPK', 'OPL', 'OPM', 'OPN', 'OPO', 'OPP', 'OPQ', 'OPR', 'OPS', 'OPT', 'OPU', 'OPV', 'OPW', 'OPX',
        'KRA', 'KRB', 'KRC', 'KRD', 'KRE', 'KRF', 'KRG', 'KRH', 'KRI', 'KRJ', 'KRK', 'KRL', 'KRM', 'KRN', 'KRO', 'KRP', 'KRQ', 'KRR', 'KRS', 'KRT', 'KRU', 'KRV', 'KRW', 'KRX',
        'BCA', 'BCB', 'BCC', 'BCD', 'BCE', 'BCF', 'BCG', 'BCH', 'BCI', 'BCJ', 'BCK', 'BCL', 'BCM', 'BCN', 'BCO', 'BCP', 'BCQ', 'BCR', 'BCS', 'BCT', 'BCU', 'BCV', 'BCW', 'BCX',
        'FLA', 'FLB', 'FLC', 'FLD', 'FLE', 'FLF', 'FLG', 'FLH', 'FLI', 'FLJ', 'FLK', 'FLL', 'FLM', 'FLN', 'FLO', 'FLP', 'FLQ', 'FLR', 'FLS', 'FLT', 'FLU', 'FLV', 'FLW', 'FLX',
        'RTA', 'RTB', 'RTC', 'RTD', 'RTE', 'RTF', 'RTG', 'RTH', 'RTI', 'RTJ', 'RTK', 'RTL', 'RTM', 'RTN', 'RTO', 'RTP', 'RTQ', 'RTR', 'RTS', 'RTT', 'RTU', 'RTV', 'RTW', 'RTX',
        //3
        'GPA', 'GPB', 'GPC', 'GPD', 'GPE', 'GPF', 'GPG', 'GPH', 'GPI', 'GPJ', 'GPK', 'GPL', 'GPM', 'GPN', 'GPO', 'GPP', 'GPQ', 'GPR', 'GPS', 'GPT', 'GPU', 'GPV', 'GPW', 'GPX',
        'OVA', 'OVB', 'OVC', 'OVD', 'OVE', 'OVF', 'OVG', 'OVH', 'OVI', 'OVJ', 'OVK', 'OVL', 'OVM', 'OVN', 'OVO', 'OVP', 'OVQ', 'OVR', 'OVS', 'OVT', 'OVU', 'OVV', 'OVW', 'OVX',
        'KPA', 'KPB', 'KPC', 'KPD', 'KPE', 'KPF', 'KPG', 'KPH', 'KPI', 'KPJ', 'KPK', 'KPL', 'KPM', 'KPN', 'KPO', 'KPP', 'KPQ', 'KPR', 'KPS', 'KPT', 'KPU', 'KPV', 'KPW', 'KPX',
        'JMA', 'JMB', 'JMC', 'JMD', 'JME', 'JMF', 'JMG', 'JMH', 'JMI', 'JMJ', 'JMK', 'JML', 'JMM', 'JMN', 'JMO', 'JMP', 'JMQ', 'JMR', 'JMS', 'JMT', 'JMU', 'JMV', 'JMW', 'JMX',
        'UNA', 'UNB', 'UNC', 'UND', 'UNE', 'UNF', 'UNG', 'UNH', 'UNI', 'UNJ', 'UNK', 'UNL', 'UNM', 'UNN', 'UNO', 'UNP', 'UNQ', 'UNR', 'UNS', 'UNT', 'UNU', 'UNV', 'UNW', 'UNX',
        'DKA', 'DKB', 'DKC', 'DKD', 'DKE', 'DKF', 'DKG', 'DKH', 'DKI', 'DKJ', 'DKK', 'DKL', 'DKM', 'DKN', 'DKO', 'DKP', 'DKQ', 'DKR', 'DKS', 'DKT', 'DKU', 'DKV', 'DKW', 'DKX',
        'TRA', 'TRB', 'TRC', 'TRD', 'TRE', 'TRF', 'TRG', 'TRH', 'TRI', 'TRJ', 'TRK', 'TRL', 'TRM', 'TRN', 'TRO', 'TRP', 'TRQ', 'TRR', 'TRS', 'TRT', 'TRU', 'TRV', 'TRW', 'TRX',
        'UMA', 'UMB', 'UMC', 'UMD', 'UME', 'UMF', 'UMG', 'UMH', 'UMI', 'UMJ', 'UMK', 'UML', 'UMM', 'UMN', 'UMO', 'UMP', 'UMQ', 'UMR', 'UMS', 'UMT', 'UMU', 'UMV', 'UMW', 'UMX',
        'OMA', 'OMB', 'OMC', 'OMD', 'OME', 'OMF', 'OMG', 'OMH', 'OMI', 'OMJ', 'OMK', 'OML', 'OMM', 'OMN', 'OMO', 'OMP', 'OMQ', 'OMR', 'OMS', 'OMT', 'OMU', 'OMV', 'OMW', 'OMX',
    ]

    worksheet2.columns = [{ key: 'id', width: 10 }, { key: 'tgl', width: 20 }, { key: 'shift', width: 10 }, { key: 'nrp1', width: 10 }, { key: 'nrp2', width: 10 }, { key: 'nrp3', width: 10 }, { key: 'nrp4', width: 10 }, { key: 'line', width: 10 }, { key: 'part', width: 32 },
    { key: 'DMA' }, { key: 'DMB' }, { key: 'DMC' }, { key: 'DMD' }, { key: 'DME' }, { key: 'DMF' }, { key: 'DMG' }, { key: 'DMH' }, { key: 'DMI' }, { key: 'DMJ' }, { key: 'DMK' }, { key: 'DML' }, { key: 'DMM' }, { key: 'DMN' }, { key: 'DMO' }, { key: 'DMP' }, { key: 'DMQ' }, { key: 'DMR' }, { key: 'DMS' }, { key: 'DMT' }, { key: 'DMU' }, { key: 'DMV' }, { key: 'DMW' }, { key: 'DMX' },
    { key: 'BLA' }, { key: 'BLB' }, { key: 'BLC' }, { key: 'BLD' }, { key: 'BLE' }, { key: 'BLF' }, { key: 'BLG' }, { key: 'BLH' }, { key: 'BLI' }, { key: 'BLJ' }, { key: 'BLK' }, { key: 'BLL' }, { key: 'BLM' }, { key: 'BLN' }, { key: 'BLO' }, { key: 'BLP' }, { key: 'BLQ' }, { key: 'BLR' }, { key: 'BLS' }, { key: 'BLT' }, { key: 'BLU' }, { key: 'BLV' }, { key: 'BLW' }, { key: 'BLX' },
    { key: 'SRA' }, { key: 'SRB' }, { key: 'SRC' }, { key: 'SRD' }, { key: 'SRE' }, { key: 'SRF' }, { key: 'SRG' }, { key: 'SRH' }, { key: 'SRI' }, { key: 'SRJ' }, { key: 'SRK' }, { key: 'SRL' }, { key: 'SRM' }, { key: 'SRN' }, { key: 'SRO' }, { key: 'SRP' }, { key: 'SRQ' }, { key: 'SRR' }, { key: 'SRS' }, { key: 'SRT' }, { key: 'SRU' }, { key: 'SRV' }, { key: 'SRW' }, { key: 'SRX' },
    { key: 'DNA' }, { key: 'DNB' }, { key: 'DNC' }, { key: 'DND' }, { key: 'DNE' }, { key: 'DNF' }, { key: 'DNG' }, { key: 'DNH' }, { key: 'DNI' }, { key: 'DNJ' }, { key: 'DNK' }, { key: 'DNL' }, { key: 'DNM' }, { key: 'DNN' }, { key: 'DNO' }, { key: 'DNP' }, { key: 'DNQ' }, { key: 'DNR' }, { key: 'DNS' }, { key: 'DNT' }, { key: 'DNU' }, { key: 'DNV' }, { key: 'DNW' }, { key: 'DNX' },
    { key: 'UCA' }, { key: 'UCB' }, { key: 'UCC' }, { key: 'UCD' }, { key: 'UCE' }, { key: 'UCF' }, { key: 'UCG' }, { key: 'UCH' }, { key: 'UCI' }, { key: 'UCJ' }, { key: 'UCK' }, { key: 'UCL' }, { key: 'UCM' }, { key: 'UCN' }, { key: 'UCO' }, { key: 'UCP' }, { key: 'UCQ' }, { key: 'UCR' }, { key: 'UCS' }, { key: 'UCT' }, { key: 'UCU' }, { key: 'UCV' }, { key: 'UCW' }, { key: 'UCX' },
    { key: 'STA' }, { key: 'STB' }, { key: 'STC' }, { key: 'STD' }, { key: 'STE' }, { key: 'STF' }, { key: 'STG' }, { key: 'STH' }, { key: 'STI' }, { key: 'STJ' }, { key: 'STK' }, { key: 'STL' }, { key: 'STM' }, { key: 'STN' }, { key: 'STO' }, { key: 'STP' }, { key: 'STQ' }, { key: 'STR' }, { key: 'STS' }, { key: 'STT' }, { key: 'STU' }, { key: 'STV' }, { key: 'STW' }, { key: 'STX' },
    { key: 'KSA' }, { key: 'KSB' }, { key: 'KSC' }, { key: 'KSD' }, { key: 'KSE' }, { key: 'KSF' }, { key: 'KSG' }, { key: 'KSH' }, { key: 'KSI' }, { key: 'KSJ' }, { key: 'KSK' }, { key: 'KSL' }, { key: 'KSM' }, { key: 'KSN' }, { key: 'KSO' }, { key: 'KSP' }, { key: 'KSQ' }, { key: 'KSR' }, { key: 'KSS' }, { key: 'KST' }, { key: 'KSU' }, { key: 'KSV' }, { key: 'KSW' }, { key: 'KSX' },
    { key: 'NAA' }, { key: 'NAB' }, { key: 'NAC' }, { key: 'NAD' }, { key: 'NAE' }, { key: 'NAF' }, { key: 'NAG' }, { key: 'NAH' }, { key: 'NAI' }, { key: 'NAJ' }, { key: 'NAK' }, { key: 'NAL' }, { key: 'NAM' }, { key: 'NAN' }, { key: 'NAO' }, { key: 'NAP' }, { key: 'NAQ' }, { key: 'NAR' }, { key: 'NAS' }, { key: 'NAT' }, { key: 'NAU' }, { key: 'NAV' }, { key: 'NAW' }, { key: 'NAX' },
    { key: 'RVA' }, { key: 'RVB' }, { key: 'RVC' }, { key: 'RVD' }, { key: 'RVE' }, { key: 'RVF' }, { key: 'RVG' }, { key: 'RVH' }, { key: 'RVI' }, { key: 'RVJ' }, { key: 'RVK' }, { key: 'RVL' }, { key: 'RVM' }, { key: 'RVN' }, { key: 'RVO' }, { key: 'RVP' }, { key: 'RVQ' }, { key: 'RVR' }, { key: 'RVS' }, { key: 'RVT' }, { key: 'RVU' }, { key: 'RVV' }, { key: 'RVW' }, { key: 'RVX' },
    { key: 'BMA' }, { key: 'BMB' }, { key: 'BMC' }, { key: 'BMD' }, { key: 'BME' }, { key: 'BMF' }, { key: 'BMG' }, { key: 'BMH' }, { key: 'BMI' }, { key: 'BMJ' }, { key: 'BMK' }, { key: 'BML' }, { key: 'BMM' }, { key: 'BMN' }, { key: 'BMO' }, { key: 'BMP' }, { key: 'BMQ' }, { key: 'BMR' }, { key: 'BMS' }, { key: 'BMT' }, { key: 'BMU' }, { key: 'BMV' }, { key: 'BMW' }, { key: 'BMX' },
    { key: 'JTA' }, { key: 'JTB' }, { key: 'JTC' }, { key: 'JTD' }, { key: 'JTE' }, { key: 'JTF' }, { key: 'JTG' }, { key: 'JTH' }, { key: 'JTI' }, { key: 'JTJ' }, { key: 'JTK' }, { key: 'JTL' }, { key: 'JTM' }, { key: 'JTN' }, { key: 'JTO' }, { key: 'JTP' }, { key: 'JTQ' }, { key: 'JTR' }, { key: 'JTS' }, { key: 'JTT' }, { key: 'JTU' }, { key: 'JTV' }, { key: 'JTW' }, { key: 'JTX' },
    { key: 'PLA' }, { key: 'PLB' }, { key: 'PLC' }, { key: 'PLD' }, { key: 'PLE' }, { key: 'PLF' }, { key: 'PLG' }, { key: 'PLH' }, { key: 'PLI' }, { key: 'PLJ' }, { key: 'PLK' }, { key: 'PLL' }, { key: 'PLM' }, { key: 'PLN' }, { key: 'PLO' }, { key: 'PLP' }, { key: 'PLQ' }, { key: 'PLR' }, { key: 'PLS' }, { key: 'PLT' }, { key: 'PLU' }, { key: 'PLV' }, { key: 'PLW' }, { key: 'PLX' },
    { key: 'NJA' }, { key: 'NJB' }, { key: 'NJC' }, { key: 'NJD' }, { key: 'NJE' }, { key: 'NJF' }, { key: 'NJG' }, { key: 'NJH' }, { key: 'NJI' }, { key: 'NJJ' }, { key: 'NJK' }, { key: 'NJL' }, { key: 'NJM' }, { key: 'NJN' }, { key: 'NJO' }, { key: 'NJP' }, { key: 'NJQ' }, { key: 'NJR' }, { key: 'NJS' }, { key: 'NJT' }, { key: 'NJU' }, { key: 'NJV' }, { key: 'NJW' }, { key: 'NJX' },
    { key: 'OPA' }, { key: 'OPB' }, { key: 'OPC' }, { key: 'OPD' }, { key: 'OPE' }, { key: 'OPF' }, { key: 'OPG' }, { key: 'OPH' }, { key: 'OPI' }, { key: 'OPJ' }, { key: 'OPK' }, { key: 'OPL' }, { key: 'OPM' }, { key: 'OPN' }, { key: 'OPO' }, { key: 'OPP' }, { key: 'OPQ' }, { key: 'OPR' }, { key: 'OPS' }, { key: 'OPT' }, { key: 'OPU' }, { key: 'OPV' }, { key: 'OPW' }, { key: 'OPX' },
    { key: 'KRA' }, { key: 'KRB' }, { key: 'KRC' }, { key: 'KRD' }, { key: 'KRE' }, { key: 'KRF' }, { key: 'KRG' }, { key: 'KRH' }, { key: 'KRI' }, { key: 'KRJ' }, { key: 'KRK' }, { key: 'KRL' }, { key: 'KRM' }, { key: 'KRN' }, { key: 'KRO' }, { key: 'KRP' }, { key: 'KRQ' }, { key: 'KRR' }, { key: 'KRS' }, { key: 'KRT' }, { key: 'KRU' }, { key: 'KRV' }, { key: 'KRW' }, { key: 'KRX' },
    { key: 'BCA' }, { key: 'BCB' }, { key: 'BCC' }, { key: 'BCD' }, { key: 'BCE' }, { key: 'BCF' }, { key: 'BCG' }, { key: 'BCH' }, { key: 'BCI' }, { key: 'BCJ' }, { key: 'BCK' }, { key: 'BCL' }, { key: 'BCM' }, { key: 'BCN' }, { key: 'BCO' }, { key: 'BCP' }, { key: 'BCQ' }, { key: 'BCR' }, { key: 'BCS' }, { key: 'BCT' }, { key: 'BCU' }, { key: 'BCV' }, { key: 'BCW' }, { key: 'BCX' },
    { key: 'FLA' }, { key: 'FLB' }, { key: 'FLC' }, { key: 'FLD' }, { key: 'FLE' }, { key: 'FLF' }, { key: 'FLG' }, { key: 'FLH' }, { key: 'FLI' }, { key: 'FLJ' }, { key: 'FLK' }, { key: 'FLL' }, { key: 'FLM' }, { key: 'FLN' }, { key: 'FLO' }, { key: 'FLP' }, { key: 'FLQ' }, { key: 'FLR' }, { key: 'FLS' }, { key: 'FLT' }, { key: 'FLU' }, { key: 'FLV' }, { key: 'FLW' }, { key: 'FLX' },
    { key: 'RTA' }, { key: 'RTB' }, { key: 'RTC' }, { key: 'RTD' }, { key: 'RTE' }, { key: 'RTF' }, { key: 'RTG' }, { key: 'RTH' }, { key: 'RTI' }, { key: 'RTJ' }, { key: 'RTK' }, { key: 'RTL' }, { key: 'RTM' }, { key: 'RTN' }, { key: 'RTO' }, { key: 'RTP' }, { key: 'RTQ' }, { key: 'RTR' }, { key: 'RTS' }, { key: 'RTT' }, { key: 'RTU' }, { key: 'RTV' }, { key: 'RTW' }, { key: 'RTX' },
    { key: 'GPA' }, { key: 'GPB' }, { key: 'GPC' }, { key: 'GPD' }, { key: 'GPE' }, { key: 'GPF' }, { key: 'GPG' }, { key: 'GPH' }, { key: 'GPI' }, { key: 'GPJ' }, { key: 'GPK' }, { key: 'GPL' }, { key: 'GPM' }, { key: 'GPN' }, { key: 'GPO' }, { key: 'GPP' }, { key: 'GPQ' }, { key: 'GPR' }, { key: 'GPS' }, { key: 'GPT' }, { key: 'GPU' }, { key: 'GPV' }, { key: 'GPW' }, { key: 'GPX' },
    { key: 'OVA' }, { key: 'OVB' }, { key: 'OVC' }, { key: 'OVD' }, { key: 'OVE' }, { key: 'OVF' }, { key: 'OVG' }, { key: 'OVH' }, { key: 'OVI' }, { key: 'OVJ' }, { key: 'OVK' }, { key: 'OVL' }, { key: 'OVM' }, { key: 'OVN' }, { key: 'OVO' }, { key: 'OVP' }, { key: 'OVQ' }, { key: 'OVR' }, { key: 'OVS' }, { key: 'OVT' }, { key: 'OVU' }, { key: 'OVV' }, { key: 'OVW' }, { key: 'OVX' },
    { key: 'KPA' }, { key: 'KPB' }, { key: 'KPC' }, { key: 'KPD' }, { key: 'KPE' }, { key: 'KPF' }, { key: 'KPG' }, { key: 'KPH' }, { key: 'KPI' }, { key: 'KPJ' }, { key: 'KPK' }, { key: 'KPL' }, { key: 'KPM' }, { key: 'KPN' }, { key: 'KPO' }, { key: 'KPP' }, { key: 'KPQ' }, { key: 'KPR' }, { key: 'KPS' }, { key: 'KPT' }, { key: 'KPU' }, { key: 'KPV' }, { key: 'KPW' }, { key: 'KPX' },
    { key: 'JMA' }, { key: 'JMB' }, { key: 'JMC' }, { key: 'JMD' }, { key: 'JME' }, { key: 'JMF' }, { key: 'JMG' }, { key: 'JMH' }, { key: 'JMI' }, { key: 'JMJ' }, { key: 'JMK' }, { key: 'JML' }, { key: 'JMM' }, { key: 'JMN' }, { key: 'JMO' }, { key: 'JMP' }, { key: 'JMQ' }, { key: 'JMR' }, { key: 'JMS' }, { key: 'JMT' }, { key: 'JMU' }, { key: 'JMV' }, { key: 'JMW' }, { key: 'JMX' },
    { key: 'UNA' }, { key: 'UNB' }, { key: 'UNC' }, { key: 'UND' }, { key: 'UNE' }, { key: 'UNF' }, { key: 'UNG' }, { key: 'UNH' }, { key: 'UNI' }, { key: 'UNJ' }, { key: 'UNK' }, { key: 'UNL' }, { key: 'UNM' }, { key: 'UNN' }, { key: 'UNO' }, { key: 'UNP' }, { key: 'UNQ' }, { key: 'UNR' }, { key: 'UNS' }, { key: 'UNT' }, { key: 'UNU' }, { key: 'UNV' }, { key: 'UNW' }, { key: 'UNX' },
    { key: 'DKA' }, { key: 'DKB' }, { key: 'DKC' }, { key: 'DKD' }, { key: 'DKE' }, { key: 'DKF' }, { key: 'DKG' }, { key: 'DKH' }, { key: 'DKI' }, { key: 'DKJ' }, { key: 'DKK' }, { key: 'DKL' }, { key: 'DKM' }, { key: 'DKN' }, { key: 'DKO' }, { key: 'DKP' }, { key: 'DKQ' }, { key: 'DKR' }, { key: 'DKS' }, { key: 'DKT' }, { key: 'DKU' }, { key: 'DKV' }, { key: 'DKW' }, { key: 'DKX' },
    { key: 'TRA' }, { key: 'TRB' }, { key: 'TRC' }, { key: 'TRD' }, { key: 'TRE' }, { key: 'TRF' }, { key: 'TRG' }, { key: 'TRH' }, { key: 'TRI' }, { key: 'TRJ' }, { key: 'TRK' }, { key: 'TRL' }, { key: 'TRM' }, { key: 'TRN' }, { key: 'TRO' }, { key: 'TRP' }, { key: 'TRQ' }, { key: 'TRR' }, { key: 'TRS' }, { key: 'TRT' }, { key: 'TRU' }, { key: 'TRV' }, { key: 'TRW' }, { key: 'TRX' },
    { key: 'UMA' }, { key: 'UMB' }, { key: 'UMC' }, { key: 'UMD' }, { key: 'UME' }, { key: 'UMF' }, { key: 'UMG' }, { key: 'UMH' }, { key: 'UMI' }, { key: 'UMJ' }, { key: 'UMK' }, { key: 'UML' }, { key: 'UMM' }, { key: 'UMN' }, { key: 'UMO' }, { key: 'UMP' }, { key: 'UMQ' }, { key: 'UMR' }, { key: 'UMS' }, { key: 'UMT' }, { key: 'UMU' }, { key: 'UMV' }, { key: 'UMW' }, { key: 'UMX' },
    { key: 'OMA' }, { key: 'OMB' }, { key: 'OMC' }, { key: 'OMD' }, { key: 'OME' }, { key: 'OMF' }, { key: 'OMG' }, { key: 'OMH' }, { key: 'OMI' }, { key: 'OMJ' }, { key: 'OMK' }, { key: 'OML' }, { key: 'OMM' }, { key: 'OMN' }, { key: 'OMO' }, { key: 'OMP' }, { key: 'OMQ' }, { key: 'OMR' }, { key: 'OMS' }, { key: 'OMT' }, { key: 'OMU' }, { key: 'OMV' }, { key: 'OMW' }, { key: 'OMX' },
    ]
    worksheet.columns = [
        { header: 'No LHP', key: 'id', width: 10 }, { header: 'Tanggal', key: 'tgl', width: 20 }, { header: 'shift', key: 'shift', width: 10 }, { header: 'MP1', key: 'nrp1', width: 10 }, { header: 'MP2', key: 'nrp2', width: 10 }, { header: 'MP3', key: 'nrp3', width: 10 }, { header: 'MP4', key: 'nrp4', width: 10 }, { header: 'Line', key: 'line', width: 10 }, { header: 'Part', key: 'part', width: 32 }, { header: 'OK', key: 'ok', width: 10 }, { header: 'NG', key: 'ng', width: 10 }, { header: 'Total', key: 'total', width: 10 }, { header: 'Target', key: 'target', width: 10 }, { header: 'AVA', key: 'ava', width: 10 }, { header: 'PER', key: 'per', width: 10 }, { header: 'QUA', key: 'qua', width: 10 }, { header: 'OEE', key: 'oee', width: 10 },
        { header: 'NG Dimensi', key: 'dimensi', width: 10 }, { header: 'NG Blong', key: 'blong', width: 10 }, { header: 'NG Seret', key: 'seret', width: 10 }, { header: 'NG Dent', key: 'dent', width: 10 }, { header: 'NG Uncutting', key: 'uncut', width: 15 }, { header: 'NG Step', key: 'step', width: 10 }, { header: 'NG Kasar', key: 'kasar', width: 10 }, { header: 'NG Assy', key: 'assy', width: 10 }, { header: 'NG Rivet', key: 'rivet', width: 10 }, { header: 'NG Bimetal', key: 'bimetal', width: 10 }, { header: 'NG Joint Tube', key: 'jtube', width: 15 }, { header: 'NG Plate', key: 'plate', width: 10 }, { header: 'NG No Jig', key: 'nojig', width: 10 }, { header: 'NG Others P', key: 'othersp', width: 15 }, { header: 'NG Keropos', key: 'keropos', width: 10 }, { header: 'NG Bocor', key: 'bocor', width: 10 }, { header: 'NG Flowline', key: 'flowline', width: 15 }, { header: 'NG Retak', key: 'retak', width: 10 }, { header: 'NG Gompal', key: 'gompal', width: 10 }, { header: 'NG Over Proses', key: 'ovp', width: 15 }, { header: 'NG Kurang Proses', key: 'kp', width: 15 }, { header: 'NG Jamur', key: 'jamur', width: 10 }, { header: 'NG Undercut', key: 'undercut', width: 15 }, { header: 'NG Dekok', key: 'dekok', width: 10 }, { header: 'NG Trial', key: 'trial', width: 10 }, { header: 'NG Uncut Material', key: 'uncutm', width: 18 }, { header: 'NG Others Material', key: 'omaterial', width: 18 },
        { header: 'DT Gagal Vacum', key: 'ggl_vacum', width: 20 }, { header: 'DT Gagal Ambil', key: 'ggl_ambil', width: 20 }, { header: 'DT Instocker', key: 'instocker', width: 20 }, { header: 'DT Outstocker', key: 'outstocker', width: 20 }, { header: 'DT Feeder', key: 'feeder', width: 20 }, { header: 'DT Flipper', key: 'flipper', width: 20 }, { header: 'DT Robot', key: 'robot', width: 20 },
        { header: 'DT Stock Waiting', key: 'stock_waiting', width: 20 }, { header: 'DT Partial', key: 'partial', width: 20 }, { header: 'DT Sortir', key: 'sortir', width: 20 }, { header: 'DT Innerpart Kosong', key: 'innerpart_kos', width: 20 }, { header: 'DT Repair Part', key: 'repair_part', width: 20 }, { header: 'DT Trimming Part', key: 'trimming', width: 20 }, { header: 'DT STO', key: 'sto', width: 20 }, { header: 'DT Others Material', key: 'othersmat', width: 20 },
        { header: 'DT MC Trouble', key: 'mc_trouble', width: 20 }, { header: 'DT MC Assy Trouble', key: 'mc_assy_trouble', width: 20 }, { header: 'DT MC SPM Drill', key: 'mc_spm_drill', width: 20 }, { header: 'DT LT Trouble', key: 'lt_trouble', width: 20 }, { header: 'DT Washing Trouble', key: 'washing_trouble', width: 20 }, { header: 'DT Angin Drop', key: 'angin_drop', width: 20 }, { header: 'DT PeBCmbahan Coolant', key: 'penambahan_coolant', width: 20 }, { header: 'DT Warming Up', key: 'warming_up', width: 20 }, { header: 'DT Others Mesin', key: 'othersmc', width: 20 },
        { header: 'DT Persiapan Produksi', key: 'persiapan_prod', width: 20 }, { header: 'DT Listrik Mati', key: 'listrik_mati', width: 20 }, { header: 'DT Kuras Washing', key: 'kuras_washing', width: 20 }, { header: 'P5M', key: 'p5m', width: 20 }, { header: 'MP Sakit', key: 'mp_sakit', width: 20 }, { header: 'DT Others Lain Lain', key: 'otherslain', width: 20 },
        { header: 'DT Setting Program', key: 'setting_program', width: 20 }, { header: 'DT Ganti Tool', key: 'ganti_tool', width: 20 }, { header: 'DT Trial Machining', key: 'trial_machining', width: 20 }, { header: 'DT Q Time', key: 'q_time', width: 20 }, { header: 'DT Jig Fixture', key: 'jig_fixture', width: 20 }, { header: 'DT Waiting CMM', key: 'waiting_cmm', width: 20 }, { header: 'DT Ukur Manual', key: 'ukur_manual', width: 20 }, { header: 'DT LT Imprag', key: 'lt_imprag', width: 20 }, { header: 'DT Ganti Threebond', key: 'ganti_threebond', width: 20 }, { header: 'DT Perubahan Proses', key: 'perubahan_proses', width: 20 }, { header: 'DT Job Setup', key: 'job_set_up', width: 20 }, { header: 'DT Trial Non Mach', key: 'trial_non_mach', width: 20 }, { header: 'DT Others Proses', key: 'others_proses', width: 20 },
        { header: '5R', key: 'limar', width: 20 }, { header: 'DT MP Pengganti', key: 'mp_pengganti', width: 20 }, { header: 'DT CT Tidak Standart', key: 'ct_tidak_standart', width: 20 }, { header: 'DT MP Dialihkan', key: 'mp_dialihkan', width: 20 }, { header: 'Dandori', key: 'dandory', width: 20 }, { header: 'Preventive Maintenance', key: 'preventive_maint', width: 20 }, { header: 'DT Produksi Part Lain', key: 'prod_part_lain', width: 20 }, { header: 'DT Produksi 2/3 Jig', key: 'produksi_duatiga_jig', width: 20 }, { header: 'DT Produksi 1 MP', key: 'produksi_1_MP', width: 20 }, { header: 'DT Produksi 2 MC', key: 'produksi_2_MC', width: 20 }, { header: 'DT Overlap Line Lain', key: 'overlap_line_lain', width: 20 }, { header: 'DT Layoff Manpower', key: 'layoff_manpower', width: 20 }, { header: 'DT Layoff Tool Kosong', key: 'layoff_tool_kosong', width: 20 }, { header: 'DT Layoff Komp SPM', key: 'layoff_komp_spm', width: 20 }, { header: 'DT Layoff Komp CNC', key: 'layoff_komp_cnc', width: 20 }, { header: 'DT Packaging Kosong', key: 'packaging_kosong', width: 20 }, { header: 'DT Layoff Stock Waiting', key: 'layoff_stock_waiting', width: 20 }
    ];
    const ressql = async () => {
        try {
            const [resprod, fields] = await conLocalP.execute('select * from tb_produksi where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [resauto, fields2] = await conLocalP.execute('select * from tb_dt_auto where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [resmat, fields3] = await conLocalP.execute('select * from tb_dt_material where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [resmach, fields4] = await conLocalP.execute('select * from tb_dt_mesin where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [resoth, fields5] = await conLocalP.execute('select * from tb_dt_others where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [respro, fields6] = await conLocalP.execute('select * from tb_dt_proses where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [resplan, fields7] = await conLocalP.execute('select * from tb_dt_terplanning where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [resng, fields8] = await conLocalP.execute('select * from tb_rejection where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [resloc1, fields10] = await conLocalP.execute('select * from tb_locsheet_1 where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [resloc2, fields11] = await conLocalP.execute('select * from tb_locsheet_2 where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            const [resloc3, fields12] = await conLocalP.execute('select * from tb_locsheet_3 where month(tanggal) = ? and nama_part = ? and line = ?', [month, part, line]);
            return [resauto, resmach, resmat, resng, resoth, resplan, respro, resprod, resloc1, resloc2, resloc3]
        } catch (error) {
            throw error
        }
    }
    const hasil = await ressql()
    for (let i = 0; i < hasil[0].length; i++) {
        worksheet.addRow({
            id: hasil[7][i].ID, tgl: (hasil[7][i].TANGGAL).toString().slice(0, 15), shift: hasil[7][i].SHIFT, nrp1: hasil[7][i].NRP1, line: hasil[7][i].LINE, part: hasil[7][i].NAMA_PART, ok: hasil[7][i].OK, ng: hasil[7][i].NG, total: hasil[7][i].TOTAL_PRODUKSI, target: hasil[7][i].TARGET, ava: hasil[7][i].AVA, per: hasil[7][i].PER, qua: hasil[7][i].QUA, oee: hasil[7][i].OEE,
            dimensi: hasil[3][i].DIMENSI, blong: hasil[3][i].BLONG, seret: hasil[3][i].SERET, dent: hasil[3][i].DENT, uncut: hasil[3][i].UNCUTTING, step: hasil[3][i].STEP, kasar: hasil[3][i].KASAR, assy: hasil[3][i].NG_ASSY, rivet: hasil[3][i].RIVET, bimetal: hasil[3][i].BIMETAL, jtube: hasil[3][i].JOINT_TUBE, plate: hasil[3][i].PLATE, nojig: hasil[3][i].NO_JIG, othersp: hasil[3][i].OTHERS_P, keropos: hasil[3][i].KEROPOS, bocor: hasil[3][i].BOCOR, flowline: hasil[3][i].FLOWLINE, retak: hasil[3][i].RETAK, gompal: hasil[3][i].GOMPAL, ovp: hasil[3][i].OVER_PROSES, kp: hasil[3][i].KURANG_PROSES, jamur: hasil[3][i].JAMUR, undercut: hasil[3][i].UNDERCUT, dekok: hasil[3][i].DEKOK, trial: hasil[3][i].TRIAL, uncutm: hasil[3][i].UNCUT_MATERIAL, omaterial: hasil[3][i].OTHERS_MATERIAL, ggl_vacum: hasil[0][i].GAGAL_VACUM, ggl_ambil: hasil[0][i].GAGAL_AMBIL, instocker: hasil[0][i].INSTOCKER,
            outstocker: hasil[0][i].OUTSTOCKER, feeder: hasil[0][i].FEEDER, flipper: hasil[0][i].FLIPPER, robot: hasil[0][i].ROBOT,
            stock_waiting: hasil[2][i].STOCK_WAITING, partial: hasil[2][i].PARTIAL, sortir: hasil[2][i].SORTIR, innerpart_kos: hasil[2][i].INNERPART_KOSONG, repair_part: hasil[2][i].REPAIR_PART, trimming: hasil[2][i].TRIMMING_PART, sto: hasil[2][i].STO, othersmat: hasil[2][i].OTHERS_MATERIAL,
            mc_trouble: hasil[1][i].MC_TROUBLE, mc_assy_trouble: hasil[1][i].MC_ASSY_TROUBLE, mc_spm_drill: hasil[1][i].MC_SPM_DRILL, lt_trouble: hasil[1][i].LT_TROUBLE, washing_trouble: hasil[1][i].WASHING_TROUBLE, angin_drop: hasil[1][i].ANGIN_DROP, penambahan_coolant: hasil[1][i].PENAMBAHAN_COOLANT, warming_up: hasil[1][i].WARMING_UP, othersmc: hasil[1][i].OTHERS_MC,
            persiapan_prod: hasil[4][i].PERSIAPAN_PROD, listrik_mati: hasil[4][i].LISTRIK_MATI, kuras_washing: hasil[4][i].KURAS_WASHING, p5m: hasil[4][i].P5M, mp_sakit: hasil[4][i].MP_SAKIT, otherslain: hasil[4][i].OTHERS,
            setting_program: hasil[6][i].SETTING_PROGRAM, ganti_tool: hasil[6][i].GANTI_TOOL, trial_machining: hasil[6][i].TRIAL_MACHINING, q_time: hasil[6][i].Q_TIME, jig_fixture: hasil[6][i].JIG_FIXTURE, waiting_cmm: hasil[6][i].WAITING_CMM, ukur_manual: hasil[6][i].UKUR_MANUAL, lt_imprag: hasil[6][i].LT_IMPRAG, ganti_threebond: hasil[6][i].GANTI_THREEBOND, perubahan_proses: hasil[6][i].PERUBAHAN_PROSES, job_set_up: hasil[6][i].JOB_SET_UP, trial_non_mach: hasil[6][i].TRIAL_NON_MACH, others_proses: hasil[6][i].OTHERS_PROSES,
            limar: hasil[5][i]['5R'], mp_pengganti: hasil[5][i].MP_PENGGANTI, ct_tidak_standart: hasil[5][i].CT_TIDAK_STANDART, mp_dialihkan: hasil[5][i].MP_DIALIHKAN, dandory: hasil[5][i].DANDORY, preventive_maint: hasil[5][i].PREVENTIVE_MAINT, prod_part_lain: hasil[5][i].PROD_PART_LAIN, produksi_duatiga_jig: hasil[5][i]['PRODUKSI_2/3_JIG'], produksi_1_MP: hasil[5][i]['PRODUKSI_1_M/P'], produksi_2_MC: hasil[5][i]['PRODUKSI_2_M/C'], overlap_line_lain: hasil[5][i].OVERLAP_LINE_LAIN, layoff_manpower: hasil[5][i].LAYOFF_MANPOWER, layoff_tool_kosong: hasil[5][i].LAYOFF_TOOL_KOSONG, layoff_komp_spm: hasil[5][i].LAYOFF_KOMP_SPM, layoff_komp_cnc: hasil[5][i].LAYOFF_KOMP_CNC, packaging_kosong: hasil[5][i].PACKAGING_KOSONG, layoff_stock_waiting: hasil[5][i].LAYOFF_STOCK_WAITING
        });
        worksheet2.addRow({
            id: hasil[7][i].ID, tgl: (hasil[7][i].TANGGAL).toString().slice(0, 15), shift: hasil[7][i].SHIFT, nrp1: hasil[7][i].NRP1, line: hasil[7][i].LINE, part: hasil[7][i].NAMA_PART,
            //1
            DMA: hasil[8][i].DMA, DMB: hasil[8][i].DMB, DMC: hasil[8][i].DMC, DMD: hasil[8][i].DMD, DME: hasil[8][i].DME, DMF: hasil[8][i].DMF, DMG: hasil[8][i].DMG, DMH: hasil[8][i].DMH, DMI: hasil[8][i].DMI, DMJ: hasil[8][i].DMJ, DMK: hasil[8][i].DMK, DML: hasil[8][i].DML, DMM: hasil[8][i].DMM, DMN: hasil[8][i].DMN, DMO: hasil[8][i].DMO, DMP: hasil[8][i].DMP, DMQ: hasil[8][i].DMQ, DMR: hasil[8][i].DMR, DMS: hasil[8][i].DMS, DMT: hasil[8][i].DMT, DMU: hasil[8][i].DMU, DMV: hasil[8][i].DMV, DMW: hasil[8][i].DMW, DMX: hasil[8][i].DMX,
            BLA: hasil[8][i].BLA, BLB: hasil[8][i].BLB, BLC: hasil[8][i].BLC, BLD: hasil[8][i].BLD, BLE: hasil[8][i].BLE, BLF: hasil[8][i].BLF, BLG: hasil[8][i].BLG, BLH: hasil[8][i].BLH, BLI: hasil[8][i].BLI, BLJ: hasil[8][i].BLJ, BLK: hasil[8][i].BLK, BLL: hasil[8][i].BLL, BLM: hasil[8][i].BLM, BLN: hasil[8][i].BLN, BLO: hasil[8][i].BLO, BLP: hasil[8][i].BLP, BLQ: hasil[8][i].BLQ, BLR: hasil[8][i].BLR, BLS: hasil[8][i].BLS, BLT: hasil[8][i].BLT, BLU: hasil[8][i].BLU, BLV: hasil[8][i].BLV, BLW: hasil[8][i].BLW, BLX: hasil[8][i].BLX,
            SRA: hasil[8][i].SRA, SRB: hasil[8][i].SRB, SRC: hasil[8][i].SRC, SRD: hasil[8][i].SRD, SRE: hasil[8][i].SRE, SRF: hasil[8][i].SRF, SRG: hasil[8][i].SRG, SRH: hasil[8][i].SRH, SRI: hasil[8][i].SRI, SRJ: hasil[8][i].SRJ, SRK: hasil[8][i].SRK, SRL: hasil[8][i].SRL, SRM: hasil[8][i].SRM, SRN: hasil[8][i].SRN, SRO: hasil[8][i].SRO, SRP: hasil[8][i].SRP, SRQ: hasil[8][i].SRQ, SRR: hasil[8][i].SRR, SRS: hasil[8][i].SRS, SRT: hasil[8][i].SRT, SRU: hasil[8][i].SRU, SRV: hasil[8][i].SRV, SRW: hasil[8][i].SRW, SRX: hasil[8][i].SRX,
            DNA: hasil[8][i].DNA, DNB: hasil[8][i].DNB, DNC: hasil[8][i].DNC, DND: hasil[8][i].DND, DNE: hasil[8][i].DNE, DNF: hasil[8][i].DNF, DNG: hasil[8][i].DNG, DNH: hasil[8][i].DNH, DNI: hasil[8][i].DNI, DNJ: hasil[8][i].DNJ, DNK: hasil[8][i].DNK, DNL: hasil[8][i].DNL, DNM: hasil[8][i].DNM, DNN: hasil[8][i].DNN, DNO: hasil[8][i].DNO, DNP: hasil[8][i].DNP, DNQ: hasil[8][i].DNQ, DNR: hasil[8][i].DNR, DNS: hasil[8][i].DNS, DNT: hasil[8][i].DNT, DNU: hasil[8][i].DNU, DNV: hasil[8][i].DNV, DNW: hasil[8][i].DNW, DNX: hasil[8][i].DNX,
            UCA: hasil[8][i].UCA, UCB: hasil[8][i].UCB, UCC: hasil[8][i].UCC, UCD: hasil[8][i].UCD, UCE: hasil[8][i].UCE, UCF: hasil[8][i].UCF, UCG: hasil[8][i].UCG, UCH: hasil[8][i].UCH, UCI: hasil[8][i].UCI, UCJ: hasil[8][i].UCJ, UCK: hasil[8][i].UCK, UCL: hasil[8][i].UCL, UCM: hasil[8][i].UCM, UCN: hasil[8][i].UCN, UCO: hasil[8][i].UCO, UCP: hasil[8][i].UCP, UCQ: hasil[8][i].UCQ, UCR: hasil[8][i].UCR, UCS: hasil[8][i].UCS, UCT: hasil[8][i].UCT, UCU: hasil[8][i].UCU, UCV: hasil[8][i].UCV, UCW: hasil[8][i].UCW, UCX: hasil[8][i].UCX,
            STA: hasil[8][i].STA, STB: hasil[8][i].STB, STC: hasil[8][i].STC, STD: hasil[8][i].STD, STE: hasil[8][i].STE, STF: hasil[8][i].STF, STG: hasil[8][i].STG, STH: hasil[8][i].STH, STI: hasil[8][i].STI, STJ: hasil[8][i].STJ, STK: hasil[8][i].STK, STL: hasil[8][i].STL, STM: hasil[8][i].STM, STN: hasil[8][i].STN, STO: hasil[8][i].STO, STP: hasil[8][i].STP, STQ: hasil[8][i].STQ, STR: hasil[8][i].STR, STS: hasil[8][i].STS, STT: hasil[8][i].STT, STU: hasil[8][i].STU, STV: hasil[8][i].STV, STW: hasil[8][i].STW, STX: hasil[8][i].STX,
            KSA: hasil[8][i].KSA, KSB: hasil[8][i].KSB, KSC: hasil[8][i].KSC, KSD: hasil[8][i].KSD, KSE: hasil[8][i].KSE, KSF: hasil[8][i].KSF, KSG: hasil[8][i].KSG, KSH: hasil[8][i].KSH, KSI: hasil[8][i].KSI, KSJ: hasil[8][i].KSJ, KSK: hasil[8][i].KSK, KSL: hasil[8][i].KSL, KSM: hasil[8][i].KSM, KSN: hasil[8][i].KSN, KSO: hasil[8][i].KSO, KSP: hasil[8][i].KSP, KSQ: hasil[8][i].KSQ, KSR: hasil[8][i].KSR, KSS: hasil[8][i].KSS, KST: hasil[8][i].KST, KSU: hasil[8][i].KSU, KSV: hasil[8][i].KSV, KSW: hasil[8][i].KSW, KSX: hasil[8][i].KSX,
            NAA: hasil[8][i].NAA, NAB: hasil[8][i].NAB, NAC: hasil[8][i].NAC, NAD: hasil[8][i].NAD, NAE: hasil[8][i].NAE, NAF: hasil[8][i].NAF, NAG: hasil[8][i].NAG, NAH: hasil[8][i].NAH, NAI: hasil[8][i].NAI, NAJ: hasil[8][i].NAJ, NAK: hasil[8][i].NAK, NAL: hasil[8][i].NAL, NAM: hasil[8][i].NAM, NAN: hasil[8][i].NAN, NAO: hasil[8][i].NAO, NAP: hasil[8][i].NAP, NAQ: hasil[8][i].NAQ, NAR: hasil[8][i].NAR, NAS: hasil[8][i].NAS, NAT: hasil[8][i].NAT, NAU: hasil[8][i].NAU, NAV: hasil[8][i].NAV, NAW: hasil[8][i].NAW, NAX: hasil[8][i].NAX,
            RVA: hasil[8][i].RVA, RVB: hasil[8][i].RVB, RVC: hasil[8][i].RVC, RVD: hasil[8][i].RVD, RVE: hasil[8][i].RVE, RVF: hasil[8][i].RVF, RVG: hasil[8][i].RVG, RVH: hasil[8][i].RVH, RVI: hasil[8][i].RVI, RVJ: hasil[8][i].RVJ, RVK: hasil[8][i].RVK, RVL: hasil[8][i].RVL, RVM: hasil[8][i].RVM, RVN: hasil[8][i].RVN, RVO: hasil[8][i].RVO, RVP: hasil[8][i].RVP, RVQ: hasil[8][i].RVQ, RVR: hasil[8][i].RVR, RVS: hasil[8][i].RVS, RVT: hasil[8][i].RVT, RVU: hasil[8][i].RVU, RVV: hasil[8][i].RVV, RVW: hasil[8][i].RVW, RVX: hasil[8][i].RVX,
            //2
            BMA: hasil[9][i].BMA, BMB: hasil[9][i].BMB, BMC: hasil[9][i].BMC, BMD: hasil[9][i].BMD, BME: hasil[9][i].BME, BMF: hasil[9][i].BMF, BMG: hasil[9][i].BMG, BMH: hasil[9][i].BMH, BMI: hasil[9][i].BMI, BMJ: hasil[9][i].BMJ, BMK: hasil[9][i].BMK, BML: hasil[9][i].BML, BMM: hasil[9][i].BMM, BMN: hasil[9][i].BMN, BMO: hasil[9][i].BMO, BMP: hasil[9][i].BMP, BMQ: hasil[9][i].BMQ, BMR: hasil[9][i].BMR, BMS: hasil[9][i].BMS, BMT: hasil[9][i].BMT, BMU: hasil[9][i].BMU, BMV: hasil[9][i].BMV, BMW: hasil[9][i].BMW, BMX: hasil[9][i].BMX,
            JTA: hasil[9][i].JTA, JTB: hasil[9][i].JTB, JTC: hasil[9][i].JTC, JTD: hasil[9][i].JTD, JTE: hasil[9][i].JTE, JTF: hasil[9][i].JTF, JTG: hasil[9][i].JTG, JTH: hasil[9][i].JTH, JTI: hasil[9][i].JTI, JTJ: hasil[9][i].JTJ, JTK: hasil[9][i].JTK, JTL: hasil[9][i].JTL, JTM: hasil[9][i].JTM, JTN: hasil[9][i].JTN, JTO: hasil[9][i].JTO, JTP: hasil[9][i].JTP, JTQ: hasil[9][i].JTQ, JTR: hasil[9][i].JTR, JTS: hasil[9][i].JTS, JTT: hasil[9][i].JTT, JTU: hasil[9][i].JTU, JTV: hasil[9][i].JTV, JTW: hasil[9][i].JTW, JTX: hasil[9][i].JTX,
            PLA: hasil[9][i].PLA, PLB: hasil[9][i].PLB, PLC: hasil[9][i].PLC, PLD: hasil[9][i].PLD, PLE: hasil[9][i].PLE, PLF: hasil[9][i].PLF, PLG: hasil[9][i].PLG, PLH: hasil[9][i].PLH, PLI: hasil[9][i].PLI, PLJ: hasil[9][i].PLJ, PLK: hasil[9][i].PLK, PLL: hasil[9][i].PLL, PLM: hasil[9][i].PLM, PLN: hasil[9][i].PLN, PLO: hasil[9][i].PLO, PLP: hasil[9][i].PLP, PLQ: hasil[9][i].PLQ, PLR: hasil[9][i].PLR, PLS: hasil[9][i].PLS, PLT: hasil[9][i].PLT, PLU: hasil[9][i].PLU, PLV: hasil[9][i].PLV, PLW: hasil[9][i].PLW, PLX: hasil[9][i].PLX,
            NJA: hasil[9][i].NJA, NJB: hasil[9][i].NJB, NJC: hasil[9][i].NJC, NJD: hasil[9][i].NJD, NJE: hasil[9][i].NJE, NJF: hasil[9][i].NJF, NJG: hasil[9][i].NJG, NJH: hasil[9][i].NJH, NJI: hasil[9][i].NJI, NJJ: hasil[9][i].NJJ, NJK: hasil[9][i].NJK, NJL: hasil[9][i].NJL, NJM: hasil[9][i].NJM, NJN: hasil[9][i].NJN, NJO: hasil[9][i].NJO, NJP: hasil[9][i].NJP, NJQ: hasil[9][i].NJQ, NJR: hasil[9][i].NJR, NJS: hasil[9][i].NJS, NJT: hasil[9][i].NJT, NJU: hasil[9][i].NJU, NJV: hasil[9][i].NJV, NJW: hasil[9][i].NJW, NJX: hasil[9][i].NJX,
            OPA: hasil[9][i].OPA, OPB: hasil[9][i].OPB, OPC: hasil[9][i].OPC, OPD: hasil[9][i].OPD, OPE: hasil[9][i].OPE, OPF: hasil[9][i].OPF, OPG: hasil[9][i].OPG, OPH: hasil[9][i].OPH, OPI: hasil[9][i].OPI, OPJ: hasil[9][i].OPJ, OPK: hasil[9][i].OPK, OPL: hasil[9][i].OPL, OPM: hasil[9][i].OPM, OPN: hasil[9][i].OPN, OPO: hasil[9][i].OPO, OPP: hasil[9][i].OPP, OPQ: hasil[9][i].OPQ, OPR: hasil[9][i].OPR, OPS: hasil[9][i].OPS, OPT: hasil[9][i].OPT, OPU: hasil[9][i].OPU, OPV: hasil[9][i].OPV, OPW: hasil[9][i].OPW, OPX: hasil[9][i].OPX,
            KRA: hasil[9][i].KRA, KRB: hasil[9][i].KRB, KRC: hasil[9][i].KRC, KRD: hasil[9][i].KRD, KRE: hasil[9][i].KRE, KRF: hasil[9][i].KRF, KRG: hasil[9][i].KRG, KRH: hasil[9][i].KRH, KRI: hasil[9][i].KRI, KRJ: hasil[9][i].KRJ, KRK: hasil[9][i].KRK, KRL: hasil[9][i].KRL, KRM: hasil[9][i].KRM, KRN: hasil[9][i].KRN, KRO: hasil[9][i].KRO, KRP: hasil[9][i].KRP, KRQ: hasil[9][i].KRQ, KRR: hasil[9][i].KRR, KRS: hasil[9][i].KRS, KRT: hasil[9][i].KRT, KRU: hasil[9][i].KRU, KRV: hasil[9][i].KRV, KRW: hasil[9][i].KRW, KRX: hasil[9][i].KRX,
            BCA: hasil[9][i].BCA, BCB: hasil[9][i].BCB, BCC: hasil[9][i].BCC, BCD: hasil[9][i].BCD, BCE: hasil[9][i].BCE, BCF: hasil[9][i].BCF, BCG: hasil[9][i].BCG, BCH: hasil[9][i].BCH, BCI: hasil[9][i].BCI, BCJ: hasil[9][i].BCJ, BCK: hasil[9][i].BCK, BCL: hasil[9][i].BCL, BCM: hasil[9][i].BCM, BCN: hasil[9][i].BCN, BCO: hasil[9][i].BCO, BCP: hasil[9][i].BCP, BCQ: hasil[9][i].BCQ, BCR: hasil[9][i].BCR, BCS: hasil[9][i].BCS, BCT: hasil[9][i].BCT, BCU: hasil[9][i].BCU, BCV: hasil[9][i].BCV, BCW: hasil[9][i].BCW, BCX: hasil[9][i].BCX,
            FLA: hasil[9][i].FLA, FLB: hasil[9][i].FLB, FLC: hasil[9][i].FLC, FLD: hasil[9][i].FLD, FLE: hasil[9][i].FLE, FLF: hasil[9][i].FLF, FLG: hasil[9][i].FLG, FLH: hasil[9][i].FLH, FLI: hasil[9][i].FLI, FLJ: hasil[9][i].FLJ, FLK: hasil[9][i].FLK, FLL: hasil[9][i].FLL, FLM: hasil[9][i].FLM, FLN: hasil[9][i].FLN, FLO: hasil[9][i].FLO, FLP: hasil[9][i].FLP, FLQ: hasil[9][i].FLQ, FLR: hasil[9][i].FLR, FLS: hasil[9][i].FLS, FLT: hasil[9][i].FLT, FLU: hasil[9][i].FLU, FLV: hasil[9][i].FLV, FLW: hasil[9][i].FLW, FLX: hasil[9][i].FLX,
            RTA: hasil[9][i].RTA, RTB: hasil[9][i].RTB, RTC: hasil[9][i].RTC, RTD: hasil[9][i].RTD, RTE: hasil[9][i].RTE, RTF: hasil[9][i].RTF, RTG: hasil[9][i].RTG, RTH: hasil[9][i].RTH, RTI: hasil[9][i].RTI, RTJ: hasil[9][i].RTJ, RTK: hasil[9][i].RTK, RTL: hasil[9][i].RTL, RTM: hasil[9][i].RTM, RTN: hasil[9][i].RTN, RTO: hasil[9][i].RTO, RTP: hasil[9][i].RTP, RTQ: hasil[9][i].RTQ, RTR: hasil[9][i].RTR, RTS: hasil[9][i].RTS, RTT: hasil[9][i].RTT, RTU: hasil[9][i].RTU, RTV: hasil[9][i].RTV, RTW: hasil[9][i].RTW, RTX: hasil[9][i].RTX,
            //3
            GPA: hasil[10][i].GPA, GPB: hasil[10][i].GPB, GPC: hasil[10][i].GPC, GPD: hasil[10][i].GPD, GPE: hasil[10][i].GPE, GPF: hasil[10][i].GPF, GPG: hasil[10][i].GPG, GPH: hasil[10][i].GPH, GPI: hasil[10][i].GPI, GPJ: hasil[10][i].GPJ, GPK: hasil[10][i].GPK, GPL: hasil[10][i].GPL, GPM: hasil[10][i].GPM, GPN: hasil[10][i].GPN, GPO: hasil[10][i].GPO, GPP: hasil[10][i].GPP, GPQ: hasil[10][i].GPQ, GPR: hasil[10][i].GPR, GPS: hasil[10][i].GPS, GPT: hasil[10][i].GPT, GPU: hasil[10][i].GPU, GPV: hasil[10][i].GPV, GPW: hasil[10][i].GPW, GPX: hasil[10][i].GPX,
            OVA: hasil[10][i].OVA, OVB: hasil[10][i].OVB, OVC: hasil[10][i].OVC, OVD: hasil[10][i].OVD, OVE: hasil[10][i].OVE, OVF: hasil[10][i].OVF, OVG: hasil[10][i].OVG, OVH: hasil[10][i].OVH, OVI: hasil[10][i].OVI, OVJ: hasil[10][i].OVJ, OVK: hasil[10][i].OVK, OVL: hasil[10][i].OVL, OVM: hasil[10][i].OVM, OVN: hasil[10][i].OVN, OVO: hasil[10][i].OVO, OVP: hasil[10][i].OVP, OVQ: hasil[10][i].OVQ, OVR: hasil[10][i].OVR, OVS: hasil[10][i].OVS, OVT: hasil[10][i].OVT, OVU: hasil[10][i].OVU, OVV: hasil[10][i].OVV, OVW: hasil[10][i].OVW, OVX: hasil[10][i].OVX,
            KPA: hasil[10][i].KPA, KPB: hasil[10][i].KPB, KPC: hasil[10][i].KPC, KPD: hasil[10][i].KPD, KPE: hasil[10][i].KPE, KPF: hasil[10][i].KPF, KPG: hasil[10][i].KPG, KPH: hasil[10][i].KPH, KPI: hasil[10][i].KPI, KPJ: hasil[10][i].KPJ, KPK: hasil[10][i].KPK, KPL: hasil[10][i].KPL, KPM: hasil[10][i].KPM, KPN: hasil[10][i].KPN, KPO: hasil[10][i].KPO, KPP: hasil[10][i].KPP, KPQ: hasil[10][i].KPQ, KPR: hasil[10][i].KPR, KPS: hasil[10][i].KPS, KPT: hasil[10][i].KPT, KPU: hasil[10][i].KPU, KPV: hasil[10][i].KPV, KPW: hasil[10][i].KPW, KPX: hasil[10][i].KPX,
            JMA: hasil[10][i].JMA, JMB: hasil[10][i].JMB, JMC: hasil[10][i].JMC, JMD: hasil[10][i].JMD, JME: hasil[10][i].JME, JMF: hasil[10][i].JMF, JMG: hasil[10][i].JMG, JMH: hasil[10][i].JMH, JMI: hasil[10][i].JMI, JMJ: hasil[10][i].JMJ, JMK: hasil[10][i].JMK, JML: hasil[10][i].JML, JMM: hasil[10][i].JMM, JMN: hasil[10][i].JMN, JMO: hasil[10][i].JMO, JMP: hasil[10][i].JMP, JMQ: hasil[10][i].JMQ, JMR: hasil[10][i].JMR, JMS: hasil[10][i].JMS, JMT: hasil[10][i].JMT, JMU: hasil[10][i].JMU, JMV: hasil[10][i].JMV, JMW: hasil[10][i].JMW, JMX: hasil[10][i].JMX,
            UNA: hasil[10][i].UNA, UNB: hasil[10][i].UNB, UNC: hasil[10][i].UNC, UND: hasil[10][i].UND, UNE: hasil[10][i].UNE, UNF: hasil[10][i].UNF, UNG: hasil[10][i].UNG, UNH: hasil[10][i].UNH, UNI: hasil[10][i].UNI, UNJ: hasil[10][i].UNJ, UNK: hasil[10][i].UNK, UNL: hasil[10][i].UNL, UNM: hasil[10][i].UNM, UNN: hasil[10][i].UNN, UNO: hasil[10][i].UNO, UNP: hasil[10][i].UNP, UNQ: hasil[10][i].UNQ, UNR: hasil[10][i].UNR, UNS: hasil[10][i].UNS, UNT: hasil[10][i].UNT, UNU: hasil[10][i].UNU, UNV: hasil[10][i].UNV, UNW: hasil[10][i].UNW, UNX: hasil[10][i].UNX,
            DKA: hasil[10][i].DKA, DKB: hasil[10][i].DKB, DKC: hasil[10][i].DKC, DKD: hasil[10][i].DKD, DKE: hasil[10][i].DKE, DKF: hasil[10][i].DKF, DKG: hasil[10][i].DKG, DKH: hasil[10][i].DKH, DKI: hasil[10][i].DKI, DKJ: hasil[10][i].DKJ, DKK: hasil[10][i].DKK, DKL: hasil[10][i].DKL, DKM: hasil[10][i].DKM, DKN: hasil[10][i].DKN, DKO: hasil[10][i].DKO, DKP: hasil[10][i].DKP, DKQ: hasil[10][i].DKQ, DKR: hasil[10][i].DKR, DKS: hasil[10][i].DKS, DKT: hasil[10][i].DKT, DKU: hasil[10][i].DKU, DKV: hasil[10][i].DKV, DKW: hasil[10][i].DKW, DKX: hasil[10][i].DKX,
            TRA: hasil[10][i].TRA, TRB: hasil[10][i].TRB, TRC: hasil[10][i].TRC, TRD: hasil[10][i].TRD, TRE: hasil[10][i].TRE, TRF: hasil[10][i].TRF, TRG: hasil[10][i].TRG, TRH: hasil[10][i].TRH, TRI: hasil[10][i].TRI, TRJ: hasil[10][i].TRJ, TRK: hasil[10][i].TRK, TRL: hasil[10][i].TRL, TRM: hasil[10][i].TRM, TRN: hasil[10][i].TRN, TRO: hasil[10][i].TRO, TRP: hasil[10][i].TRP, TRQ: hasil[10][i].TRQ, TRR: hasil[10][i].TRR, TRS: hasil[10][i].TRS, TRT: hasil[10][i].TRT, TRU: hasil[10][i].TRU, TRV: hasil[10][i].TRV, TRW: hasil[10][i].TRW, TRX: hasil[10][i].TRX,
            UMA: hasil[10][i].UMA, UMB: hasil[10][i].UMB, UMC: hasil[10][i].UMC, UMD: hasil[10][i].UMD, UME: hasil[10][i].UME, UMF: hasil[10][i].UMF, UMG: hasil[10][i].UMG, UMH: hasil[10][i].UMH, UMI: hasil[10][i].UMI, UMJ: hasil[10][i].UMJ, UMK: hasil[10][i].UMK, UML: hasil[10][i].UML, UMM: hasil[10][i].UMM, UMN: hasil[10][i].UMN, UMO: hasil[10][i].UMO, UMP: hasil[10][i].UMP, UMQ: hasil[10][i].UMQ, UMR: hasil[10][i].UMR, UMS: hasil[10][i].UMS, UMT: hasil[10][i].UMT, UMU: hasil[10][i].UMU, UMV: hasil[10][i].UMV, UMW: hasil[10][i].UMW, UMX: hasil[10][i].UMX,
            OMA: hasil[10][i].OMA, OMB: hasil[10][i].OMB, OMC: hasil[10][i].OMC, OMD: hasil[10][i].OMD, OME: hasil[10][i].OME, OMF: hasil[10][i].OMF, OMG: hasil[10][i].OMG, OMH: hasil[10][i].OMH, OMI: hasil[10][i].OMI, OMJ: hasil[10][i].OMJ, OMK: hasil[10][i].OMK, OML: hasil[10][i].OML, OMM: hasil[10][i].OMM, OMN: hasil[10][i].OMN, OMO: hasil[10][i].OMO, OMP: hasil[10][i].OMP, OMQ: hasil[10][i].OMQ, OMR: hasil[10][i].OMR, OMS: hasil[10][i].OMS, OMT: hasil[10][i].OMT, OMU: hasil[10][i].OMU, OMV: hasil[10][i].OMV, OMW: hasil[10][i].OMW, OMX: hasil[10][i].OMX,

        })
    }
    const date = new Date()
    const name = `docs/resume ${date.getDate()}-${date.getMonth()}-${date.getFullYear()} ${part}.xlsx`
    await workbook.xlsx.writeFile(name)
    res.download(name)

}

exports.downloadExcel = async (req, res) => {
    let q = req.query
    createExcel(res, q.month, q.part, q.line)
} 